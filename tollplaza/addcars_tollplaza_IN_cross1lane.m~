function othercars = addcars_tollplaza_IN_cross1lane(othercars, track, nr_cars, laneChangePath)
% ADD CARS IN RANDOM POSTIONS
% VERBOSE = 0;



for carid = 1:nr_cars
    
    laneidx= 1;
    tmppos = get_posintrack(track, 1, 0, laneidx, 0);
    x = (240-(carid-1)*20)*10^3;
    y = tmppos(2);
    carpos = [x y 0];
    othercars.car{carid}.goallane = 13;
    othercars.car{carid}.time_TTC = 0.0;
    othercars.car{carid}.pathTranslated = laneChangePath{othercars.car{carid}.goallane, laneidx};
    
    if carpos(1) < track.xmax
        othercars.car{carid}.flgPlaza = 0; % 0:on straight lane ,1:on plaza lane
    else
        othercars.car{carid}.flgPlaza = 1; % 0:on straight lane ,1:on plaza lane
        dist=bsxfun(@hypot,Path(:,1)-pos(1),Path(:,2)-pos(2));
    [~,idx]=min(dist);
    othercars.car{othercars.n}.pos(1:2) = Path(idx,:);
    
    if idx~=nData
        vx= path(idx+1,1)-path(idx,1);
        vy= path(idx+1,2)-path(idx,2);
    else
        vx= path(idx,1)-path(idx-1,1);
        vy= path(idx,2)-path(idx-1,2);
    end
    
    othercars.car{othercars.n}.pos(3) = atan(vy/vx)*180/pi;
    end
    othercars.car{carid}.flgIDM = 0; % 0:before controlling by IDM ,1:velocity control by IDM (both are on condition in the plaza)
    othercars.car{carid}.angry = 0;
    segidx = 1;
    othercars = add_othercars(othercars, carpos, [17500 0], 'normal',1, laneidx, segidx, laneChangePath); % 10000 mm/s = 36 km/h
end

end


function othercars = add_othercars(othercars, pos, vel, ctrlmode, track_idx,lane_idx,seg_idx, Path)
if nargin == 3
    ctrlmode = 'normal';
end
othercars.n = othercars.n + 1;

if othercars.car{othercars.n}.flgPlaza == 0
    othercars.car{othercars.n}.pos = pos;
else
    dist=bsxfun(@hypot,Path(:,1)-pos(1),Path(:,2)-pos(2));
    [~,idx]=min(dist);
    othercars.car{othercars.n}.pos(1:2) = Path(idx,:);
    
    if idx~=nData
        vx= path(idx+1,1)-path(idx,1);
        vy= path(idx+1,2)-path(idx,2);
    else
        vx= path(idx,1)-path(idx-1,1);
        vy= path(idx,2)-path(idx-1,2);
    end
    
    othercars.car{othercars.n}.pos(3) = atan(vy/vx)*180/pi;
end
othercars.car{othercars.n}.pos = pos;
othercars.car{othercars.n}.vel = vel;
othercars.car{othercars.n}.ctrlmode = ctrlmode;
othercars.car{othercars.n}.paths = [];

othercars.car{othercars.n}.save.pos = pos; 
othercars.car{othercars.n}.save.vel = vel;
othercars.car{othercars.n}.save.track_idx = track_idx;
othercars.car{othercars.n}.save.lane_idx  = lane_idx;
othercars.car{othercars.n}.save.seg_idx   = seg_idx;
end